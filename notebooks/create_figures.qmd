---
output: html_document
editor_options: 
  chunk_output_type: console
---
This notebook creates the figures and tables for the manuscript.

# Load packages and function

```{r}
library(tidyverse)
library(lubridate)
library(here)
library(scales)
library(janitor)
library(patchwork)
library(gt)
```


```{r}
# Load plotting function
source(here::here("lib", "functions", "funs_plot_measures.R"))
source(here::here("lib", "functions", "funs_report_results.R"))

x_scale_date_breaks <- c(
  date("2019-03-01"),
  date("2019-07-01"),
  date("2019-11-01"),
  date("2020-03-01"),
  date("2020-07-01"),
  date("2020-11-01"),
  date("2021-03-01"),
  date("2021-07-01"),
  date("2021-11-01"),
  date("2022-03-01"),
  date("2022-07-01"),
  date("2022-11-01"),
  date("2023-03-01")
)

indicator_levels <- c(
  "hyp001",
  "hyp003",
  "hyp007",
  "bp002_1y_hypreg",
  "bp002_1y",
  "bp002_5y"
)

indicator_labels_short <- c(
  "HYP001 (Total population)",
  "HYP003 (Age <= 79)",
  "HYP007 (Age >= 80)",
  "BP monitoring, 12 months (Hypertension register)",
  "BP002, 12 months (Age >= 45)",
  "BP002, 5 years (Age >= 45)"
)

indicator_labels_long <- c(
  "Hypertension register\n(HYP001, Total population)",
  "Hypertension management\n(HYP003, Age <= 79)",
  "Hypertension management\n(HYP007, Age >= 80)",
  "BP monitoring in the preceeding 12 months\n(Hypertension register)",
  "BP monitoring in the preceeding 12 months\n(Age >= 45)",
  "BP monitoring in the preceeding 5 years\n(BP002, Age >= 45)"
)
```

# Load data

```{r}
df_deciles_bp_hyp_practice <- read_csv(here("released_outputs/deciles/deciles_bp_hyp_practice.csv"))
# unique(df_deciles_bp_hyp_practice$indicator)
# range(df_deciles_bp_hyp_practice$date)

df_deciles_bp_hyp_practice <- df_deciles_bp_hyp_practice |>
  mutate(
    percentile = factor(percentile,
      levels = seq(10, 90, 10),
      labels = c(seq(1, 4, 1), "5 - Median", seq(6, 9, 1))
    ),
    indicator_label = factor(indicator,
      levels = indicator_levels,
      labels = indicator_labels_long
    ),
    indicator_label_short = factor(indicator,
      levels = indicator_levels,
      labels = indicator_labels_short
    )
  )

df_deciles_bp_hyp_practice <- df_deciles_bp_hyp_practice |>
  mutate(variable = "Practice level deciles")

df_deciles_bp_hyp_practice |>
  group_by(indicator) |>
  count()
```

```{r}
df_measures_bp_hyp <- read_csv(here("released_outputs/measures/df_measures_bp_hyp.csv")) |>
  mutate(
    indicator_label = factor(indicator,
      levels = indicator_levels,
      labels = indicator_labels_long
    ),
    indicator_label_short = factor(indicator,
      levels = indicator_levels,
      labels = indicator_labels_short
    )
  )

# unique(df_measures_bp_hyp$indicator)
# unique(df_measures_bp_hyp$group)
# unique(df_measures_bp_hyp$subgroup)

# Change age band group for BP002 so plot legends can be combined
df_plot_measures_bp_hyp <- df_measures_bp_hyp |>
  mutate(group = factor(group,
    levels = c(
      "population",
      "sex",
      "age_band",
      "ethnicity16",
      "ethnicity6",
      "imd_q5",
      "region",
      "care_home",
      "learning_disability"
    ),
    labels = c(
      "Population",
      "Sex",
      "Age band",
      "Ethnicity (16 Groups)",
      "Ethnicity",
      "IMD",
      "Region",
      "Care home",
      "Learning disability"
    )
  ))


# unique(df_plot_measures_bp_hyp$indicator)
# unique(df_plot_measures_bp_hyp$group)
# unique(df_plot_measures_bp_hyp$subgroup)

# Remove unknown ethniciyt and missing region from plots
df_plot_measures_bp_hyp <- df_plot_measures_bp_hyp |>
  filter(!(group == "Ethnicity" & subgroup == "Unknown")) |>
  filter(!(subgroup == "(Missing)"))

unique(df_plot_measures_bp_hyp$subgroup)
```

# Hypertension

## HYP001

### Individual plots

```{r}
plot_hyp001_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = variable,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    ybreaks = seq(0, 1, .02),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_hyp001_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("hyp001")) |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = group
  )

plot_hyp001_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  )

plot_hyp001_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Set1") +
  scale_x_date(
    breaks = x_scale_date_breaks,
    labels = scales::label_date_short()
  )

plot_hyp001_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("hyp001")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 3,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_hyp001_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp001_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp001_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("hyp001")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")
```


### Combine plots

```{r}
plot_hyp001_breakdowns <- (plot_hyp001_deciles_practice + plot_hyp001_sex) /
  (plot_hyp001_age_band + plot_hyp001_region) /
  (plot_hyp001_eth + plot_hyp001_imd) /
  (plot_hyp001_learning_disability + plot_hyp001_care_home)

plot_hyp001_breakdowns <- plot_hyp001_breakdowns & ylab(NULL) & theme(legend.position = "top")

plot_hyp001_breakdowns <- plot_hyp001_breakdowns + plot_annotation(tag_levels = "A")

plot_hyp001_breakdowns <- plot_hyp001_breakdowns &
  theme_classic() &
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 11.5),
    text = element_text(size = 15),
    strip.background = element_rect(size = 0),
    strip.text.x = element_text(size = 13, face = "bold")
  )

ggsave(
  filename = here("released_outputs", "figures", "figure_hyp001_breakdowns.png"),
  plot = plot_hyp001_breakdowns,
  width = 12.8,
  height = 15
)
```


## HYP003 & HYP007

### HYP003 Individual plots

```{r}
plot_hyp003_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = indicator_label_short,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    ybreaks = seq(0, 1, .15),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_hyp003_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("hyp003")) |>
  filter(subgroup != "(Missing)") |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = indicator_label_short
  )

plot_hyp003_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  )

plot_hyp003_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Set1")

plot_hyp003_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("hyp003")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_hyp003_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp003_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp003_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("hyp003")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")
```


### HYP007 Individual plots

```{r}
plot_hyp007_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = indicator_label_short,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    ybreaks = seq(0, 1, .15),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_hyp007_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("hyp007")) |>
  filter(subgroup != "(Missing)") |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = indicator_label_short
  )

plot_hyp007_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  )

plot_hyp007_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Set1")

plot_hyp007_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("hyp007")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_hyp007_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp007_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_hyp007_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("hyp007")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = indicator_label_short
  ) +
  scale_colour_brewer(palette = "Dark2")
```

### Combine plots

```{r}
ggtheme_qof <- theme_classic() &
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 11.5),
    text = element_text(size = 15),
    strip.background = element_rect(size = 0),
    strip.text.x = element_text(size = 13, face = "bold")
  )

breakdown1_hyp003_hyp007 <- (
  plot_hyp003_deciles_practice +
    plot_hyp007_deciles_practice +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_sex +
    plot_hyp007_sex +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_age_band +
    plot_hyp007_age_band +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_eth +
    plot_hyp007_eth +
    plot_layout(guides = "collect") &
    ggtheme_qof) & 
    scale_y_continuous(
      labels = scales::percent, 
      limits = c(.29, .95), 
      breaks = seq(.3, .9, by = .15)
      ) & 
    ylab(NULL)

breakdown1_hyp003_hyp007 <- breakdown1_hyp003_hyp007 + plot_annotation(tag_levels = "A")

ggsave(
  filename = here("released_outputs", "figures", "figure_hyp003_hyp007_breakdowns_1.png"),
  plot = breakdown1_hyp003_hyp007,
  width = 12.5,
  height = 15
)

breakdown2_hyp003_hyp007 <- (
  plot_hyp003_region +
    plot_hyp007_region +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_imd +
    plot_hyp007_imd +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_learning_disability +
    plot_hyp007_learning_disability +
    plot_layout(guides = "collect") &
    ggtheme_qof) /
  (plot_hyp003_care_home +
    plot_hyp007_care_home +
    plot_layout(guides = "collect") &
    ggtheme_qof) & 
    scale_y_continuous(
      labels = scales::percent, 
      limits = c(.29, .95), 
      breaks = seq(.3, .9, by = .15)
      ) & 
    ylab(NULL)

breakdown2_hyp003_hyp007 <- breakdown2_hyp003_hyp007 + plot_annotation(tag_levels = "A")

ggsave(
  filename = here("released_outputs", "figures", "figure_hyp003_hyp007_breakdowns_2.png"),
  plot = breakdown2_hyp003_hyp007,
  width = 12.5,
  height = 15
)
```

## BP002 5y

### Individual plots 

```{r}
plot_bp002_5y_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = variable,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    ybreaks = seq(0, 1, .04),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_bp002_5y_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("bp002_5y")) |>
  filter(subgroup != "(Missing)") |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = group
  )

plot_bp002_5y_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  )

plot_bp002_5y_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Set1")

plot_bp002_5y_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("bp002_5y")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 3,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_bp002_5y_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_5y_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_5y_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("bp002_5y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")
```

### Combine plots

```{r}
plot_bp002_5y_breakdowns <- ((plot_bp002_5y_deciles_practice + plot_bp002_5y_sex) /
  (plot_bp002_5y_age_band + plot_bp002_5y_region) /
  (plot_bp002_5y_eth + plot_bp002_5y_imd) /
  (plot_bp002_5y_learning_disability + plot_bp002_5y_care_home)) &  
    scale_y_continuous(
      labels = scales::percent, 
      limits = c(.7, 1), 
      breaks = seq(.7, 1, by = .1)
      ) & 
    ylab(NULL)

plot_bp002_5y_breakdowns <- plot_bp002_5y_breakdowns + plot_annotation(tag_levels = "A")

plot_bp002_5y_breakdowns <- plot_bp002_5y_breakdowns &
  theme_classic() &
  theme(
    legend.position = "bottom",
    text = element_text(size = 15),
    strip.background = element_rect(size = 0),
    strip.text.x = element_text(size = 13, face = "bold")
  )

ggsave(
  filename = here("released_outputs", "figures", "figure_bp002_5y_breakdowns.png"),
  plot = plot_bp002_5y_breakdowns,
  width = 12.5,
  height = 15
)
```

## BP002 1y

### Individual plots 

```{r}
plot_bp002_1y_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = variable,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    # ybreaks = seq(0, 1, .04),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_bp002_1y_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("bp002_1y")) |>
  filter(subgroup != "(Missing)") |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = group
  )

plot_bp002_1y_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  )

plot_bp002_1y_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Set1")

plot_bp002_1y_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("bp002_1y")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 3,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_bp002_1y_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_1y_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_1y_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("bp002_1y")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")
```

### Combine plots

```{r}
plot_bp002_1y_breakdowns <- (
  (plot_bp002_1y_deciles_practice +
    plot_bp002_1y_sex) &
    scale_y_continuous(labels = scales::percent, limits = c(.27, .70))) /
  (plot_bp002_1y_age_band +
    plot_bp002_1y_region) /
  (plot_bp002_1y_eth +
    plot_bp002_1y_imd) /
  ((plot_bp002_1y_learning_disability +
    plot_bp002_1y_care_home) &
    scale_y_continuous(labels = scales::percent, limits = c(.38, .90)))

plot_bp002_1y_breakdowns <- plot_bp002_1y_breakdowns & ylab(NULL) & theme(
  legend.position = "top",
  legend.text = element_text(size = 11.5)
)

plot_bp002_1y_breakdowns <- plot_bp002_1y_breakdowns + plot_annotation(tag_levels = "A")
plot_bp002_1y_breakdowns <- plot_bp002_1y_breakdowns &
  theme_classic() &
  theme(
    legend.position = "bottom",
    text = element_text(size = 15),
    strip.background = element_rect(size = 0),
    strip.text.x = element_text(size = 13, face = "bold")
  )

ggsave(
  filename = here("released_outputs", "figures", "figure_bp002_1y_breakdowns.png"),
  plot = plot_bp002_1y_breakdowns,
  width = 12.5,
  height = 15
)
```

## BP002 1y HYPREG

### Individual plots 

```{r}
plot_bp002_1y_hypreg_deciles_practice <- df_deciles_bp_hyp_practice |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_deciles(
    facet_wrap = TRUE,
    facet_wrap_var = variable,
    date_breaks = x_scale_date_breaks,
    ylimits = NULL,
    # ybreaks = seq(0, 1, .04),
    legend_position = "top",
    legend_top_nrow = 1
  )

plot_bp002_1y_hypreg_imd <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "IMD") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  filter(subgroup != "(Missing)") |>
  mutate(subgroup = na_if(subgroup, "missing")) |>
  plot_qof_values(
    legend_position = "top",
    date_breaks = x_scale_date_breaks,
    legend_top_nrow = 1,
    facet_wrap = TRUE,
    facet_wrap_var = group
  )

plot_bp002_1y_hypreg_age_band <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Age band") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  )

plot_bp002_1y_hypreg_eth <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Ethnicity") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 2,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Set1")

plot_bp002_1y_hypreg_region <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Region") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  drop_na(subgroup) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 3,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_manual(values = c(
    "#e41a1c", "#377eb8", "#4daf4a", "#984ea3",
    "#ff7f00",
    "#ffff33", "#a65628", "#f781bf", "#999999"
  ))

plot_bp002_1y_hypreg_sex <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Sex") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_1y_hypreg_care_home <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Care home") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")

plot_bp002_1y_hypreg_learning_disability <- df_plot_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "Learning disability") |>
  filter(indicator %in% c("bp002_1y_hypreg")) |>
  plot_qof_values(
    legend_position = "top",
    legend_top_nrow = 1,
    date_breaks = x_scale_date_breaks,
    facet_wrap_var = group
  ) +
  scale_colour_brewer(palette = "Dark2")
```

### Combine plots

```{r}
plot_bp002_1y_hypreg_breakdowns <- (
  (plot_bp002_1y_hypreg_deciles_practice + 
     plot_bp002_1y_hypreg_sex) &
    scale_y_continuous(labels = scales::percent, limits = c(.40, 1))) /
  (plot_bp002_1y_hypreg_age_band + 
     plot_bp002_1y_hypreg_region) /
  (plot_bp002_1y_hypreg_eth +
     plot_bp002_1y_hypreg_imd) /
  ((plot_bp002_1y_hypreg_learning_disability + 
      plot_bp002_1y_hypreg_care_home) & 
     scale_y_continuous(labels = scales::percent, limits = c(.38, .90)))

plot_bp002_1y_hypreg_breakdowns <- plot_bp002_1y_hypreg_breakdowns & ylab(NULL) & theme(
  legend.position = "top",
  legend.text = element_text(size = 11.5)
)

plot_bp002_1y_hypreg_breakdowns <- plot_bp002_1y_hypreg_breakdowns + plot_annotation(tag_levels = "A")
plot_bp002_1y_hypreg_breakdowns <- plot_bp002_1y_hypreg_breakdowns &
  theme_classic() &
  theme(
    legend.position = "bottom",
    text = element_text(size = 15),
    strip.background = element_rect(size = 0),
    strip.text.x = element_text(size = 13, face = "bold")
  )

ggsave(
  filename = here("released_outputs", "figures", "figure_bp002_1y_hypreg_breakdowns.png"),
  plot = plot_bp002_1y_hypreg_breakdowns,
  width = 12.5,
  height = 15
)
```

# Population

```{r}
plot_hyp001_population <- df_measures_bp_hyp |>
  filter(indicator == c("hyp001")) |>
  filter(variable == "pct") |>
  filter(group == "population") |>
  filter(subgroup != "missing") |>
  plot_qof_values(
    legend_position = "none",
    facet_wrap_var = indicator_label,
    facet_wrap_ncol = 1,
    date_breaks = x_scale_date_breaks
  ) +
  scale_colour_viridis_d() +
  scale_y_continuous(labels = scales::label_percent(), limits = c(0, 1)) +
  scale_colour_manual(values = c("#440154FF", "#440154FF", "#440154FF", "#440154FF"))

plot_bp002_1y_hypreg_population <- df_measures_bp_hyp |>
  filter(indicator == c("bp002_1y_hypreg")) |>
  filter(variable == "pct") |>
  filter(group == "population") |>
  filter(subgroup != "missing") |>
  plot_qof_values(
    legend_position = "none",
    facet_wrap_var = indicator_label,
    facet_wrap_ncol = 1,
    ylab = "Patients receiving indicated care",
    point_size = 1,
    date_breaks = x_scale_date_breaks
  ) +
  scale_colour_viridis_d() +
  scale_y_continuous(labels = scales::label_percent(), limits = c(0, 1)) +
  scale_colour_manual(values = c("#440154FF", "#440154FF", "#440154FF", "#440154FF"))

# plot_hyp001_population

plot_hyp003_hyp007_population <- df_measures_bp_hyp |>
  filter(indicator %in% c("hyp003", "hyp007")) |>
  filter(variable == "pct") |>
  filter(group == "population") |>
  filter(subgroup != "missing") |>
  mutate(subgroup = case_when(
    subgroup == "Total (Age <= 79)" ~ "Age <= 79",
    subgroup == "Total (Age >= 80)" ~ "Age >= 80"
  )) |>
  mutate(facet_wrap_var = "Hypertension management in the preceeding 12 months\n(HYP003, HYP007)") |>
  plot_qof_values(
    date_breaks = x_scale_date_breaks,
    shape_subgroup = TRUE,
    point_size = 1.4,
    legend_position = "right",
    facet_wrap_ncol = 1,
    facet_wrap_var = facet_wrap_var,
    ylab = "Patients receiving indicated care"
  ) +
  scale_colour_viridis_d() +
  scale_y_continuous(labels = scales::label_percent(), limits = c(0, 1)) +
  scale_colour_manual(values = c("#3E4A89FF", "#35B779FF")) +
  theme(legend.position = c(.84, .30))

# paletteer::paletteer_c("viridis::viridis", n = 10)

plot_bp002_5y_population <- df_measures_bp_hyp |>
  filter(indicator == c("bp002_5y")) |>
  filter(variable == "pct") |>
  filter(group == "population") |>
  filter(subgroup != "missing") |>
  plot_qof_values(
    date_breaks = x_scale_date_breaks,
    legend_position = "none",
    facet_wrap_var = indicator_label,
    facet_wrap_ncol = 1,
    ylab = "Patients receiving indicated care"
  ) +
  scale_colour_viridis_d() +
  scale_y_continuous(labels = scales::label_percent(), limits = c(0, 1)) +
  scale_colour_manual(values = c("#440154FF", "#440154FF", "#440154FF", "#440154FF"))

plot_reg_ind_population <- (plot_bp002_5y_population + plot_hyp001_population) / (plot_bp002_1y_hypreg_population + plot_hyp003_hyp007_population) + plot_annotation(tag_levels = "A") &
  # theme_classic() &
  theme(
    text = element_text(size = 14),
    strip.background = element_blank(),
    strip.text.x = element_text(size = 12.5, face = "bold"),
    panel.border = element_blank(),
    panel.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.background = element_blank(),
    axis.line = element_line(colour = "black", linewidth = rel(1)),
    legend.text = element_text(size = 10),
    legend.background = element_blank(),
  )

plot_reg_ind_population

ggsave(
  filename = here("released_outputs", "figures", "figure_bp_hyp_population.png"),
  plot = plot_reg_ind_population, width = 11.5, height = 7
)
```

# Counts for Appendix

```{r}
df_plot_measures_bp_hyp_count <- df_plot_measures_bp_hyp |>
  mutate(variable = case_when(
    indicator == "hyp001" & variable == "register" ~ "numerator",
    indicator == "hyp001" & variable == "population" ~ "denominator",
    indicator == "bp002_1y_hypreg" & variable == "population" ~ "denominator",
    TRUE ~ variable
  ))  |>
   mutate(indicator_label = factor(indicator_label, levels = c("BP monitoring in the preceeding 5 years\n(BP002, Age >= 45)",
                                                  "BP monitoring in the preceeding 12 months\n(Hypertension register)",
                                                  "Hypertension register\n(HYP001, Total population)",
                                                  "Hypertension management\n(HYP003, Age <= 79)",
                                                  "Hypertension management\n(HYP007, Age >= 80)"),
                                       labels = c("BP monitoring in the preceeding 5 years\n(BP002, Age >= 45)",
                                                  "BP monitoring in the preceeding 12 months\n(Hypertension register)",
                                                  "Hypertension register\n(HYP001, Total population)",
                                                  "Hypertension management\n(HYP003, Age <= 79)",
                                                  "Hypertension management\n(HYP007, Age >= 80)")))

figure_bp_hyp_counts <- df_plot_measures_bp_hyp_count |>
  filter(group == "Population") |>
  filter(indicator %in% c("bp002_1y_hypreg", "bp002_5y", "hyp001", "hyp003", "hyp007")) |>

  pivot_wider(names_from = "variable", values_from = "value") |>
  ggplot(aes(colour = numerator / denominator)) +
  geom_segment(aes(
    x = date,
    xend = date,
    y = numerator,
    yend = denominator
  )) +
  ggplot2::scale_y_continuous(labels = scales::comma) +
    geom_vline(
      xintercept = lubridate::as_date(c(
        "2019-03-01", "2020-03-01",
        "2021-03-01", "2022-03-01",
        "2023-03-01"
      )),
      linetype = "dotted",
      colour = "orange",
      size = .7
    ) +
  scale_colour_viridis_c(
    name = NULL,
    option = "mako",
    direction = -1, end = .8, 
    labels = scales::percent
  ) +
  geom_point(aes(x = date, y = numerator), size = 2, shape = 15) +
  geom_point(aes(x = date, y = denominator), size = 2, shape = 16) +
  labs(x = NULL, y = "Count of patients") +
  scale_x_date(date_breaks = "4 month", labels = scales::label_date_short()) +
  theme(
    text = element_text(size = 14),
    axis.text.x = element_text(size = 10),
    legend.position = "right"
  ) +
  facet_wrap(~indicator_label, scale = "free_y", ncol = 1) +
    scale_x_date(
      breaks = x_scale_date_breaks,
      labels = scales::label_date_short()
    ) +
   guides(colour = guide_colourbar(draw.ulim = TRUE, draw.llim = TRUE))