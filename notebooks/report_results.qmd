This notebook creates the figures and tables for the manuscript.

# Load packages and function

```{r}

library(tidyverse)
library(lubridate)
library(here)
library(scales)
library(janitor)
library(patchwork)
library(gt)

```


```{r}
# Load reporting function
source(here::here("lib", "functions", "funs_report_results.R"))
```

# Load data

```{r}

df_deciles_bp_hyp_practice <- read_csv(here("released_outputs/deciles/deciles_bp_hyp_practice.csv"))
df_measures_bp_hyp <- read_csv(here("released_outputs/measures/df_measures_bp_hyp.csv"))

df_deciles_bp_hyp_practice <- df_deciles_bp_hyp_practice |>
  rename(category = percentile) |>
  mutate(variable = "decile",
         group = "practice_level_decile",
         category = as.character(category)) |>
  relocate(indicator, date, variable, group, category, value)

df_measures_bp_hyp <- df_measures_bp_hyp |> bind_rows(df_deciles_bp_hyp_practice)|>
  arrange(indicator, date, variable, group, category)

df_deciles_bp_hyp_practice |>
  group_by(indicator) |>
  count()

df_measures_bp_hyp 

df_measures_bp_hyp <- df_measures_bp_hyp |>
  filter(date < "2022-04-01")
```



```{r}

summary_report_min_max <- function(df, filter_group, filter_variable = c("pct", "numerator", "denominator", "population", "decile")) {

  df_min <- df |>
    filter(group == {{filter_group}}) |>
    filter(variable == {{filter_variable}}) |>
    group_by(indicator, variable) |>
    slice_min(value, n = 1)

  df_max <- df |>
    filter(group == {{filter_group}}) |>
    filter(variable == {{filter_variable}}) |>
    group_by(indicator, variable) |>
    slice_max(value, n = 1)

  df_diff <- bind_rows(df_min, df_max) |>
    arrange(indicator, date, variable) |>
    group_by(indicator, variable) |>
    mutate(diff = value - lag(value))

  df_diff

}

df <- summary_report_min_max(df = df_measures_bp_hyp,
                             filter_group = "population",
                             filter_variable = "pct")

df
      

df_measures_bp_hyp |>
  # filter(month(date) == 3) |>
  filter(group == "population") |>
  group_by(indicator, variable) |>
  slice_max(value, n = 2) |>
  filter(variable == "pct")

df_measures_bp_hyp
```


```{r}


df_measures_bp_hyp |>
  filter(group == "population") |>
  group_by(indicator, variable) |>
  slice_min(date, n = 1) |>
  filter(variable == "pct")

df_measures_bp_hyp |>
  filter(group == "population") |>
  group_by(indicator, variable) |>
  slice_max(date, n = 1) |>
  filter(variable == "pct")

```

```{r}

report_national_median <- function(df, filter_date = NULL) {

  df <- df |>
    filter(variable == "decile") |>
    filter(category == "50") |>
    pivot_wider(names_from = indicator, values_from = value)

  if (is.null(filter_date)) {
    df
  } else {
    df |>
      filter(date == filter_date)
  }
  }

report_national_median(df_measures_bp_hyp, filter_date = "2021-03-01")


report_group_pct <- function(df, filter_group, filter_category = NULL, filter_date = NULL) {

  df <- df |>
    filter(variable == "pct") |>
    filter(group == filter_group) |>
    pivot_wider(names_from = indicator, values_from = value)


  if (!is.null(filter_category)) {
    df <- df |>
      filter(category == filter_category)
  }

  if (is.null(filter_date)) {
    df
  } else {
    df |>
      filter(date == filter_date)
  }
  }

report_category_pct(df_measures_bp_hyp, filter_group = "region", filter_category = NULL, filter_date = "2021-03-01")

unique(df_measures_bp_hyp$variable)
unique(df_measures_bp_hyp$group)
unique(df_measures_bp_hyp$category)
```

