```{r}
library(tidyverse)
library(here)
library(scales)
library(janitor)
```

```{r}
# Load plotting function
source(here::here("lib", "functions", "funs_plot_measures.R"))
source(here::here("lib", "functions", "funs_report_results.R"))
```


## Deciles
```{r}
df_deciles_bp_hyp_practice <- read_csv(here("released_outputs/deciles/deciles_bp_hyp_practice.csv"))

df_deciles_bp_hyp_practice <- df_deciles_bp_hyp_practice |>
  mutate(percentile = factor(percentile,
                             levels = seq(10, 90, 10),
                             labels = c(seq(1, 4, 1), "5 - Median", seq(6, 9, 1))),
         indicator = factor(indicator, 
                            levels = c("hyp001", "hyp003", "hyp007", "bp002"),
                            labels = c("HYP001 (Register)", "HYP003", "HYP007", "BP002")))
```

```{r}
plot_deciles_bp_hyp_practice <- df_deciles_bp_hyp_practice |>
  ggplot(aes(x = date, 
             y = value, 
             colour = percentile, 
             group = percentile)) +
  geom_vline(xintercept = lubridate::as_date(c("2019-04-01", "2020-04-01",
                                             "2021-04-01", "2022-04-01")),
           linetype = "dotted",
           colour = "orange",
           size = .5) +
  geom_point(size = .5) +
  geom_line(alpha = .5) +
  scale_y_continuous(labels = scales::label_percent(),
                     limits = c(0, 1), 
                     breaks = seq(0, 1, .25)) +
  scale_x_date(date_breaks = "5 months",
               labels = scales::label_date_short()) +
  labs(x = NULL, y = NULL, colour = "Decile") +
  theme(legend.position = "right") +
  facet_wrap(~indicator, ncol = 4) +
  scale_colour_manual(values = c("#6DCD59FF", "#35B779FF", "#1F9E89FF", "#26828EFF", 
                                 "#482878FF",
                                 "#26828EFF", "#1F9E89FF", "#35B779FF", "#6DCD59FF"))

ggsave(filename = here("released_outputs", "figures", "deciles_bp_hyp_practice.png"),
       plot = plot_deciles_bp_hyp_practice, width = 12, height = 6)
```

## Achievement
```{r}
df_measures_bp_hyp <- read_csv(here("released_outputs/measures/df_measures_bp_hyp.csv")) 
# |>
        #  mutate(indicator = factor(indicator, 
                            # levels = c("hyp001", "hyp003", "hyp007", "bp002"),
                            # labels = c("HYP001 (Register)", "HYP003", "HYP007", "BP002")))
```


```{r}

df_measures_bp_hyp
```

```{r}

df_measures_bp_hyp |>
  filter(variable == "pct") |>
  filter(group == "imd") |>
  filter(indicator %in% c("HYP003", "HYP007", "BP002")) |>
  mutate(category = na_if(category, "missing")) |>
  ggplot(aes(x = date, 
             y = value,
             colour = category)) +
    geom_vline(xintercept = lubridate::as_date(c("2019-04-01", "2020-04-01",
                                             "2021-04-01", "2022-04-01")),
                                                        linetype = "dotted",
           colour = "orange",
           size = .5) +
  geom_point(size = 1) +
  geom_line(size = .5,
            alpha = 0.3) +
    scale_x_date(
      date_breaks = "5 months",
      labels = scales::label_date_short()
    ) +
    ggplot2::scale_y_continuous(
          labels = scales::label_percent()) +
          ggplot2::scale_colour_viridis_d(na.value = "grey50") +
  facet_wrap(~indicator, ncol = 3)

```

```{r}

df_measures_bp_hyp_split <- df_measures_bp_hyp |>
  filter(variable == "pct") |>
  group_split(indicator, group, .keep = TRUE)

df_measures_bp_hyp_split

```


```{r}

plot_temp_1 <- plot_qof_indicator(df = df_measures_bp_hyp_split[[1]], 
                                value = value,
                                group_category = category,
                                scale_colour = "viridis")

plot_temp2 <- plot_qof_indicator(df = df_measures_bp_hyp_split[[2]], 
                                value = value,
                                group_category = category,
                                scale_colour = "viridis")

plot_temp3 <- plot_qof_indicator(df = df_measures_bp_hyp_split[[3]], 
                                value = value,
                                group_category = category,
                                scale_colour = "viridis")
library(patchwork)
plot_temp3 + plot_temp3 + plot_temp3
```

```{r}
# for (plot in seq_along(df_measures_bp_hyp)) {

#   group_name <- df_measures_bp_hyp[[plot]] |> pull(group) |> unique()
#   indicator_name <- df_measures_bp_hyp[[plot]] |> pull(indicator) |> unique() |> as.character()
  
#   if (group_name %in% c("ethnicity", "region")) {
#       scale_colours <- "brewer_set1"
#   }

#    if (group_name %in% c("learning_disability", "care_home", "sex")) {
#       scale_colours <- "brewer_dark2"
#   }

#    if (group_name %in% c("imd", "population")) {
#       scale_colours <- "viridis"
#   }
  
#   plot_temp <- plot_qof_indicator(df = df_measures_bp_hyp[[plot]], 
#                                   value = value,
#                                   group_category = category,
#                                   scale_colour = "viridis")

#   ggsave(filename = here("released_outputs", "figures", paste0(indicator_name, "_", group_name, ".png")),
#          plot = plot_temp, width = 12, height = 6)
#   }
```